/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from "./routes/__root"
import { Route as ProductImport } from "./routes/product"
import { Route as JewelleryImport } from "./routes/jewellery"
import { Route as DeferredImport } from "./routes/deferred"
import { Route as ContactImport } from "./routes/contact"
import { Route as BijouxDespaceImport } from "./routes/bijoux-despace"
import { Route as AtelierImport } from "./routes/atelier"
import { Route as AboutImport } from "./routes/about"
import { Route as IndexImport } from "./routes/index"
import { Route as CollectionNameImport } from "./routes/collection/$name"
import { Route as CollectionNameAboutImport } from "./routes/collection/$name.about"

// Create/Update Routes

const ProductRoute = ProductImport.update({
  path: "/product",
  getParentRoute: () => rootRoute,
} as any)

const JewelleryRoute = JewelleryImport.update({
  path: "/jewellery",
  getParentRoute: () => rootRoute,
} as any)

const DeferredRoute = DeferredImport.update({
  path: "/deferred",
  getParentRoute: () => rootRoute,
} as any)

const ContactRoute = ContactImport.update({
  path: "/contact",
  getParentRoute: () => rootRoute,
} as any)

const BijouxDespaceRoute = BijouxDespaceImport.update({
  path: "/bijoux-despace",
  getParentRoute: () => rootRoute,
} as any)

const AtelierRoute = AtelierImport.update({
  path: "/atelier",
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  path: "/about",
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: "/",
  getParentRoute: () => rootRoute,
} as any)

const CollectionNameRoute = CollectionNameImport.update({
  path: "/collection/$name",
  getParentRoute: () => rootRoute,
} as any)

const CollectionNameAboutRoute = CollectionNameAboutImport.update({
  path: "/about",
  getParentRoute: () => CollectionNameRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/"
      path: "/"
      fullPath: "/"
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    "/about": {
      id: "/about"
      path: "/about"
      fullPath: "/about"
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    "/atelier": {
      id: "/atelier"
      path: "/atelier"
      fullPath: "/atelier"
      preLoaderRoute: typeof AtelierImport
      parentRoute: typeof rootRoute
    }
    "/bijoux-despace": {
      id: "/bijoux-despace"
      path: "/bijoux-despace"
      fullPath: "/bijoux-despace"
      preLoaderRoute: typeof BijouxDespaceImport
      parentRoute: typeof rootRoute
    }
    "/contact": {
      id: "/contact"
      path: "/contact"
      fullPath: "/contact"
      preLoaderRoute: typeof ContactImport
      parentRoute: typeof rootRoute
    }
    "/deferred": {
      id: "/deferred"
      path: "/deferred"
      fullPath: "/deferred"
      preLoaderRoute: typeof DeferredImport
      parentRoute: typeof rootRoute
    }
    "/jewellery": {
      id: "/jewellery"
      path: "/jewellery"
      fullPath: "/jewellery"
      preLoaderRoute: typeof JewelleryImport
      parentRoute: typeof rootRoute
    }
    "/product": {
      id: "/product"
      path: "/product"
      fullPath: "/product"
      preLoaderRoute: typeof ProductImport
      parentRoute: typeof rootRoute
    }
    "/collection/$name": {
      id: "/collection/$name"
      path: "/collection/$name"
      fullPath: "/collection/$name"
      preLoaderRoute: typeof CollectionNameImport
      parentRoute: typeof rootRoute
    }
    "/collection/$name/about": {
      id: "/collection/$name/about"
      path: "/about"
      fullPath: "/collection/$name/about"
      preLoaderRoute: typeof CollectionNameAboutImport
      parentRoute: typeof CollectionNameImport
    }
  }
}

// Create and export the route tree

interface CollectionNameRouteChildren {
  CollectionNameAboutRoute: typeof CollectionNameAboutRoute
}

const CollectionNameRouteChildren: CollectionNameRouteChildren = {
  CollectionNameAboutRoute: CollectionNameAboutRoute,
}

const CollectionNameRouteWithChildren = CollectionNameRoute._addFileChildren(
  CollectionNameRouteChildren,
)

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute
  "/about": typeof AboutRoute
  "/atelier": typeof AtelierRoute
  "/bijoux-despace": typeof BijouxDespaceRoute
  "/contact": typeof ContactRoute
  "/deferred": typeof DeferredRoute
  "/jewellery": typeof JewelleryRoute
  "/product": typeof ProductRoute
  "/collection/$name": typeof CollectionNameRouteWithChildren
  "/collection/$name/about": typeof CollectionNameAboutRoute
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute
  "/about": typeof AboutRoute
  "/atelier": typeof AtelierRoute
  "/bijoux-despace": typeof BijouxDespaceRoute
  "/contact": typeof ContactRoute
  "/deferred": typeof DeferredRoute
  "/jewellery": typeof JewelleryRoute
  "/product": typeof ProductRoute
  "/collection/$name": typeof CollectionNameRouteWithChildren
  "/collection/$name/about": typeof CollectionNameAboutRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  "/": typeof IndexRoute
  "/about": typeof AboutRoute
  "/atelier": typeof AtelierRoute
  "/bijoux-despace": typeof BijouxDespaceRoute
  "/contact": typeof ContactRoute
  "/deferred": typeof DeferredRoute
  "/jewellery": typeof JewelleryRoute
  "/product": typeof ProductRoute
  "/collection/$name": typeof CollectionNameRouteWithChildren
  "/collection/$name/about": typeof CollectionNameAboutRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | "/"
    | "/about"
    | "/atelier"
    | "/bijoux-despace"
    | "/contact"
    | "/deferred"
    | "/jewellery"
    | "/product"
    | "/collection/$name"
    | "/collection/$name/about"
  fileRoutesByTo: FileRoutesByTo
  to:
    | "/"
    | "/about"
    | "/atelier"
    | "/bijoux-despace"
    | "/contact"
    | "/deferred"
    | "/jewellery"
    | "/product"
    | "/collection/$name"
    | "/collection/$name/about"
  id:
    | "__root__"
    | "/"
    | "/about"
    | "/atelier"
    | "/bijoux-despace"
    | "/contact"
    | "/deferred"
    | "/jewellery"
    | "/product"
    | "/collection/$name"
    | "/collection/$name/about"
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  AtelierRoute: typeof AtelierRoute
  BijouxDespaceRoute: typeof BijouxDespaceRoute
  ContactRoute: typeof ContactRoute
  DeferredRoute: typeof DeferredRoute
  JewelleryRoute: typeof JewelleryRoute
  ProductRoute: typeof ProductRoute
  CollectionNameRoute: typeof CollectionNameRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  AtelierRoute: AtelierRoute,
  BijouxDespaceRoute: BijouxDespaceRoute,
  ContactRoute: ContactRoute,
  DeferredRoute: DeferredRoute,
  JewelleryRoute: JewelleryRoute,
  ProductRoute: ProductRoute,
  CollectionNameRoute: CollectionNameRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/atelier",
        "/bijoux-despace",
        "/contact",
        "/deferred",
        "/jewellery",
        "/product",
        "/collection/$name"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/atelier": {
      "filePath": "atelier.tsx"
    },
    "/bijoux-despace": {
      "filePath": "bijoux-despace.tsx"
    },
    "/contact": {
      "filePath": "contact.tsx"
    },
    "/deferred": {
      "filePath": "deferred.tsx"
    },
    "/jewellery": {
      "filePath": "jewellery.tsx"
    },
    "/product": {
      "filePath": "product.tsx"
    },
    "/collection/$name": {
      "filePath": "collection/$name.tsx",
      "children": [
        "/collection/$name/about"
      ]
    },
    "/collection/$name/about": {
      "filePath": "collection/$name.about.tsx",
      "parent": "/collection/$name"
    }
  }
}
ROUTE_MANIFEST_END */
